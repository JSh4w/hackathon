# Extract all valid RIDs from the search results
# Based on your output, I'll extract all the ✓ entries

valid_rids = [
    "201607294200001",  # BRI → PAD
    "201607294200004",  # PGN → PAD
    "201607294200008",  # BRI → PAD
    "201607294200009",  # LST → HWC
    "201607294200011",  # WSM → PAD
    "201607294200012",  # HWC → LST
    "201607294200015",  # BRI → PAD
    "201607294200016",  # HWC → LST
    "201607294200018",  # WSM → PAD
    "201607294200019",  # COL → HWC
    "201607294200020",  # BRI → PAD
    "201607294200021",  # LST → HPQ
    "201607294200023",  # LST → HPQ
    "201607294200024",  # HPQ → LST
    "201607294200028",  # HPQ → LST
    "201607294200033",  # LST → HPQ
    "201607294200035",  # NQY → PAD
    "201607294200039",  # FRO → CDF
    "201607294200040",  # LST → SSD
    "201607294200043",  # PAD → CDF
    "201607294200044",  # LST → SSD
    "201607294200048",  # PAD → CDF
    "201607294200049",  # SSD → LST
    "201607294200052",  # PAD → CDF
    "201607294200053",  # SSD → LST
    "201607294200057",  # PAD → CDF
    "201607294200060",  # PAD → CDF
    "201607294200061",  # LST → SSD
    "201607294200065",  # PAD → CDF
    "201607294200066",  # SSD → LST
    "201607294200069",  # PAD → CDF
    "201607294200070",  # LST → SSD
    "201607294200073",  # PAD → CDF
    "201607294200074",  # SSD → LST
    "201607294200077",  # PAD → CDF
    "201607294200078",  # LST → SSD
    "201607294200081",  # PAD → SWA
    "201607294200082",  # LST → SSD
    "201607294200085",  # PAD → CMN
    "201607294200086",  # SSD → LST
    "201607294200089",  # PAD → SWA
    "201607294200090",  # SSD → LST
    "201607294200095",  # LST → SSD
    "201607294200098",  # SSD → LST
    "201607294200101",  # SSD → LST
    "201607294200102",  # FLW → SHP
    "201607294200104",  # LST → SSD
    "201607294200106",  # LST → SSD
    "201607294200107",  # HMC → SUR
    "201607294200109",  # SSD → LST
    "201607294200110",  # WAT → WOK
    "201607294200112",  # SSD → LST
    "201607294200113",  # WAT → WOK
    "201607294200115",  # WAT → HMC
    "201607294200117",  # LST → SSD
    "201607294200118",  # WAT → HMC
    "201607294200121",  # SSD → LST
    "201607294200122",  # RDG → ACT
    "201607294200126",  # PAD → BRI
    "201607294200127",  # LST → SSD
    "201607294200129",  # PAD → BRI
    "201607294200130",  # SSD → LST
    "201607294200131",  # EXD → WAT
    "201607294200133",  # LST → SSD
    "201607294200134",  # WAT → YVP
    "201607294200136",  # LST → SSD
    "201607294200137",  # EXD → WAT
    "201607294200139",  # SSD → LST
    "201607294200141",  # SSD → LST
    "201607294200142",  # WAT → YVP
    "201607294200144",  # LST → SSD
    "201607294200145",  # WAT → YVP
    "201607294200147",  # LST → SSD
    "201607294200148",  # WAT → EXD
    "201607294200150",  # SSD → LST
    "201607294200151",  # WAT → EXD
    "201607294200153",  # SSD → LST
    "201607294200154",  # WAT → EXD
    "201607294200156",  # CDF → PMH
    "201607294200157",  # LST → SSD
    "201607294200158",  # WAT → YVJ
    "201607294200160",  # CDF → PMH
    "201607294200161",  # SSD → LST
    "201607294200162",  # EXD → BSK
    "201607294200164",  # PMH → CDF
    "201607294200165",  # SSD → LST
    "201607294200166",  # YVP → SAL
    "201607294200168",  # CDF → PMH
    "201607294200169",  # EXD → HON
    "201607294200171",  # PMH → CDF
    "201607294200172",  # LST → SSD
    "201607294200173",  # WAT → PMH
    "201607294200175",  # CDF → PMH
    "201607294200176",  # SSD → LST
    "201607294200177",  # WAT → PMH
    "201607294200179",  # PMH → CDF
    "201607294200180",  # SSD → LST
    "201607294200181",  # PMH → WAT
    "201607294200183",  # CDF → PMH
    "201607294200184",  # PMH → WAT
    "201607294200186",  # PMH → CDF
    "201607294200187",  # LST → SSD
    "201607294200188",  # PMH → WAT
    "201607294200190",  # CDF → PMH
    "201607294200191",  # LST → SSD
    "201607294200192",  # WAT → PMH
    "201607294200194",  # PMH → CDF
    "201607294200195",  # SSD → LST
    "201607294200196",  # PMH → WAT
    "201607294200198",  # PMH → CDF
    "201607294200199",  # SSD → LST
]

print(f"Extracted {len(valid_rids)} valid RIDs from your search")

# Write to pad_oxf_rids.txt
with open('pad_oxf_rids.txt', 'w') as f:
    for rid in valid_rids:
        f.write(f"{rid}\n")

print(f"Written {len(valid_rids)} RIDs to pad_oxf_rids.txt")
print("These RIDs represent real train services from 2016-07-29 4:20 AM")
print("You can now test your histogram endpoint with actual data!")